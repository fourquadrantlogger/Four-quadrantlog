worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;


    sendfile        on;

    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;

        #反向代理

            location /api {
            proxy_pass  http://docker.for.mac.localhost:10008/api;

#            #CORS 配置
#                add_header 'Access-Control-Allow-Origin' '*';
#                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
#            #是否允许cookie传输
#                add_header 'Access-Control-Allow-Credentials' 'true';
#                add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With,X-Data-Type,X-Auth-Token';

              #针对浏览器的options预请求直接返回200，否则会被403 forbidden--invalie CORS request
              if ( $request_method = 'OPTIONS' ) {
                                return 200;
              }
           }

        location / {
               proxy_pass  http://docker.for.mac.localhost:3000/;

           #CORS 配置
               add_header 'Access-Control-Allow-Origin' '*';
               add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
           #是否允许cookie传输
               add_header 'Access-Control-Allow-Credentials' 'true';
               add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With,X-Data-Type,X-Auth-Token';

              #针对浏览器的options预请求直接返回200，否则会被403 forbidden--invalie CORS request
              if ( $request_method = 'OPTIONS' ) {
                                return 200;
              }
           }
    }

}