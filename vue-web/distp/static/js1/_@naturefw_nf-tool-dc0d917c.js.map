{"version":3,"file":"_@naturefw_nf-tool-dc0d917c.js","sources":["../../../node_modules/@naturefw/nf-tool/dist/nfTool.es.js"],"sourcesContent":["const toTypeString = (val) => {\n  return Object.prototype.toString.call(val);\n};\nconst typeName = (val) => {\n  return Object.prototype.toString.call(val).replace(/^\\[object (\\S+)\\]$/, \"$1\").toLowerCase();\n};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\nconst isFunction = (val) => toTypeString(val) === \"[object Function]\";\nconst isAsync = (val) => toTypeString(val) === \"[object AsyncFunction]\";\nconst isObject = (val) => val !== null && typeof val === \"object\";\nconst isArray = Array.isArray;\nconst isString = (val) => typeof val === \"string\";\nconst isNumber = (val) => typeof val === \"number\";\nconst isBigInt = (val) => typeof val === \"bigint\";\nconst isBoolean = (val) => typeof val === \"boolean\";\nconst isRegExp = (val) => toTypeString(val) === \"[object RegExp]\";\nconst isDate = (val) => val instanceof Date;\nconst isMap = (val) => toTypeString(val) === \"[object Map]\";\nconst isSet = (val) => toTypeString(val) === \"[object Set]\";\nconst isPromise = (val) => toTypeString(val) === \"[object Promise]\";\nconst isSymbol = (val) => typeof val === \"symbol\";\nconst isNullOrUndefined = (val) => {\n  if (val === null)\n    return true;\n  if (typeof val === \"undefined\")\n    return true;\n  return false;\n};\nfunction log() {\n  if (window.__showlog)\n    console.log(...arguments);\n}\nconst logTime = (msg, auto = true) => {\n  const start = () => {\n    if (window.__showlog)\n      console.time(msg);\n  };\n  const end = (msg2 = null) => {\n    if (window.__showlog) {\n      console.timeEnd(msg);\n      if (!msg2)\n        console.log(msg2);\n    }\n  };\n  if (auto)\n    start();\n  return { start, end };\n};\nexport { hasOwn, hasOwnProperty, isArray, isAsync, isBigInt, isBoolean, isDate, isFunction, isMap, isNullOrUndefined, isNumber, isObject, isPromise, isRegExp, isSet, isString, isSymbol, log, logTime, toTypeString, typeName };\n//# sourceMappingURL=nfTool.es.js.map\n"],"names":[],"mappings":"AAGK,KAAC,GAAW,AAAC,GACT,OAAO,UAAU,SAAS,KAAK,CAAG,EAAE,QAAQ,qBAAsB,IAAI,EAAE,YAAW,EAOtF,EAAU,MAAM,QAChB,EAAW,AAAC,GAAQ,MAAO,IAAQ,SAGnC,EAAY,AAAC,GAAQ,MAAO,IAAQ"}